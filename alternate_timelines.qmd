---
title: "Alternate flight timelines"
author: "Brian Maitner"
date: "3/30/2023"
output:
  html_document:
    code_folding: hide
---


* Option 1: 23 October - 4 December (6 weeks)
* Option 2: 13 October - 15 November (4.7 weeks)

```{r fig one prep}
#| echo: true
#| message: false
#| warning: false
#| include: false
#| code-fold: true
#| code-summary: "Show the code"


source("R/flight_sims_for_specific_days.R")



d4 <- flight_sim_specific_days(start_day = as_date("2023-10-23"),
                               end_day = as_date("2023-12-04"),
                               quality_threshold = 0.05, 
                               max_wind_speed = 5,
                               wind_speed_threshold = 0.1,
                               use_julian = TRUE)


n15 <- flight_sim_specific_days(start_day = as_date("2023-10-13"),
                               end_day = as_date("2023-11-15"),
                               quality_threshold = 0.05, 
                               max_wind_speed = 5,
                               wind_speed_threshold = 0.1,
                               use_julian = TRUE)



d4 %>%
  filter(!is.na(box_id))%>%
  group_by(start_date)%>%
  summarise(sites_done = sum(!is.na(box_id)),
            mean_cc = mean(na.omit(mean_cloud_cover)),
            median_wind = median(na.omit(median_wind_speed)),
            days_taken = max(date)-min(start_date)+1)-> d4_sum

n15 %>%
  filter(!is.na(box_id))%>%
  group_by(start_date)%>%
  summarise(sites_done = sum(!is.na(box_id)),
            mean_cc = mean(na.omit(mean_cloud_cover)),
            median_wind = median(na.omit(median_wind_speed)),
            days_taken = max(date)-min(start_date)+1)-> n15_sum

```

```{r fig one plot}
#| echo: false
#| message: false
#| warning: false
#| fig.cap: "Figure 1. Violin plot showing the distributions of the number of boxes flown for each timeline."
#| fig.width: 20
#| fig.height: 14
#| strip.white: TRUE
#| code-fold: true
#| code-summary: "Show the code"

paste("median" ,median(d4_sum$sites_done)," sites done with a Dec 4 end date")
paste("median",median(n15_sum$sites_done),"sites done with a Nov 15 end date")

data.frame(end_date = "Dec. 4",
           d4_sum) %>%
  bind_rows(data.frame(end_date = "Nov. 15",
                       n15_sum)
  ) %>%
  mutate(pct_done = (sites_done/20)*100) %>%
  mutate(end_date = fct_relevel(end_date,c("Nov. 15", "Dec. 4"))) %>%
  ggplot(mapping = aes(x=end_date,y=pct_done))+
  geom_violin()+
  geom_boxplot(width=0.1,fill="light grey")+
  stat_summary(fun.y=mean, geom="point", shape=23, size=2,fill="red")+
  ylab("Percent of boxes flown")+
  xlab("End Date")+
  theme(text = element_text(size = 30))  


  
```

```{r fig two}
#| echo: false
#| message: false
#| warning: false
#| fig.cap: "Figure 2. Fraction of simulations in which the flight box would be flown."
#| fig.width: 20
#| fig.height: 14
#| strip.white: TRUE
#| code-fold: true
#| code-summary: "Show the code"


#which plots do we get/miss?

boxes <- st_read("data/flight_planning/20221026_flightboxes.gpkg",quiet=TRUE)
boxes$id <- 1:20

d4%>%
  group_by(box_id)%>%
  summarize(count = n(),
            fraction = count/10) %>%
    mutate(end_date = "12-04")->d4_box

  n15 %>%
  group_by(box_id)%>%
  summarize(count = n(),
            fraction = count/10)%>%
            mutate(end_date = "11-15")->n15box


  boxes %>%
    inner_join(d4_box,by = c("id" = "box_id"))%>%
    ggplot()+
    geom_sf(mapping = aes(fill=fraction))+
    scale_fill_continuous(limits=c(0.3,1))+
    ggtitle("Dec. 4")+
    theme(text = element_text(size = 30),
          legend.text = element_text(size = 20) )  ->dplot
  
  boxes %>%
    inner_join(n15box,by = c("id" = "box_id"))%>%
    ggplot()+
    geom_sf(mapping = aes(fill=fraction))+
    scale_fill_continuous(limits=c(.3,1))+
    ggtitle("Nov. 15")+
    theme(text = element_text(size = 30),
          legend.text = element_text(size = 20))  ->nplot
  


  
library(ggpmisc)
library(ggpubr)  
  

library(patchwork)
combined <-  nplot +dplot & theme(legend.position = "bottom",
                                  axis.text = element_text(size = 20),
                                  legend.text = element_text(size = 20),
                                  text = element_text(size=20),
                                  legend.key.size = unit(x = 2,units = "cm"))

combined + plot_layout(guides = "collect",
                       ncol = 1)

```
